// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

// Use a versioned, domain-specific package name.
package com.bettergr.grades.v1;

option go_package = "github.com/BetterGR/grades-microservice/protos/com/bettergr/grades/v1";

// GradesService manages student grade information.
service GradesService {
    // GetCourseGrades retrieves a paginated list of grades for all students enrolled
    // in a specific course during a specific semester.
    rpc GetCourseGrades(GetCourseGradesRequest) returns (GetCourseGradesResponse);

    // GetStudentCourseGrades retrieves a paginated list of grades for a specific student
    // within a specific course and semester.
    rpc GetStudentCourseGrades(GetStudentCourseGradesRequest) returns (GetStudentCourseGradesResponse);

    // AddSingleGrade adds a new grade entry for a student in a course.
    rpc AddSingleGrade(AddSingleGradeRequest) returns (AddSingleGradeResponse);

    // UpdateSingleGrade modifies an existing grade entry.
    rpc UpdateSingleGrade(UpdateSingleGradeRequest) returns (UpdateSingleGradeResponse);

    // RemoveSingleGrade deletes a specific grade entry.
    rpc RemoveSingleGrade(RemoveSingleGradeRequest) returns (RemoveSingleGradeResponse);

    // GetStudentSemesterGrades retrieves a paginated list of all grades for a specific student
    // across all courses during a specific semester.
    rpc GetStudentSemesterGrades(GetStudentSemesterGradesRequest) returns (GetStudentSemesterGradesResponse);
}

// Represents a single grade entry.
message Grade {
    // The academic semester.
    string semester = 1;
    // Unique identifier for the grade entry.
    string grade_id = 2;
    // Identifier for the student.
    string student_id = 3;
    // Identifier for the course.
    string course_id = 4;
    // Type of the grade (e.g., "Homework", "Exam", "Quiz"). Consider using an enum if values are fixed.
    string grade_type = 5;
    // Identifier for the specific graded item (e.g., assignment ID).
    string item_id = 6;
    // The value or score of the grade.
    string grade_value = 7;
    // Identifier of the user who assigned the grade.
    string graded_by = 8;
    // Optional comments related to the grade.
    string comments = 9;
}

// Request message for adding a single grade.
message AddSingleGradeRequest {
    // Authentication token for authorization.
    string token = 1;
    // The grade details to add.
    Grade grade = 2;
}

// Response message after adding a single grade.
message AddSingleGradeResponse {
	// The newly added grade details.
	Grade grade = 1;
}

// Request message for retrieving grades of a specific student in a specific course.
message GetStudentCourseGradesRequest {
    // Authentication token for authorization.
    string token = 1;
    // Identifier for the course.
    string course_id = 2;
    // The academic semester.
    string semester = 3;
    // Identifier for the student.
    string student_id = 4;
    // The maximum number of grades to return.
    int32 page_size = 5;
    // A token identifying a page of results the server should return.
    string page_token = 6;
}

// Response message containing grades for a specific student in a specific course.
message GetStudentCourseGradesResponse {
    // List of grades matching the request criteria.
    repeated Grade grades = 1;
    // Token to retrieve the next page of results, or empty if there are no more results.
    string next_page_token = 2;
}

// Request message for updating a single grade.
message UpdateSingleGradeRequest {
    // Authentication token for authorization.
    string token = 1;
    // The updated grade details. `grade_id` must match an existing grade.
    Grade grade = 2;
}

// Response message after updating a single grade.
message UpdateSingleGradeResponse {
	// The updated grade details.
	Grade grade = 1;
}

// Request message for removing a single grade.
message RemoveSingleGradeRequest {
    // Authentication token for authorization.
    string token = 1;
    // Identifier for the grade entry to remove.
    string grade_id = 2;
}

// Response message after removing a single grade.
message RemoveSingleGradeResponse {
    // Empty response indicates successful removal.
}

// Request message for retrieving all grades for a specific course.
message GetCourseGradesRequest {
    // Authentication token for authorization.
    string token = 1;
    // Identifier for the course.
    string course_id = 2;
    // The academic semester.
    string semester = 3;
    // The maximum number of grades to return.
    int32 page_size = 4;
    // A token identifying a page of results the server should return.
    string page_token = 5;
}

// Response message containing all grades for a specific course.
message GetCourseGradesResponse {
    // List of grades matching the request criteria.
    repeated Grade grades = 1;
    // Token to retrieve the next page of results, or empty if there are no more results.
    string next_page_token = 2;
}

// Request message for retrieving all grades for a specific student in a specific semester.
message GetStudentSemesterGradesRequest {
    // Authentication token for authorization.
    string token = 1;
    // The academic semester.
    string semester = 2;
    // Identifier for the student.
    string student_id = 3;
    // The maximum number of grades to return.
    int32 page_size = 4;
    // A token identifying a page of results the server should return.
    string page_token = 5;
}

// Response message containing all grades for a specific student in a specific semester.
message GetStudentSemesterGradesResponse {
    // List of grades matching the request criteria.
    repeated Grade grades = 1;
    // Token to retrieve the next page of results, or empty if there are no more results.
    string next_page_token = 2;
}
